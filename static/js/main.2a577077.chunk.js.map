{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","title","titleNumber","App","useState","setTitle","setTitleNumber","like","setLike","modal","setModal","input","setInput","style","map","name","index","onClick","data-item","e","data","target","dataset","likeCopy","type","onChange","value","titleCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,MC8Ff,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAKD,EAAME,MAAMF,EAAMG,eACvB,gDAKSC,MAlGf,WAAgB,IAAD,EACWC,mBAAS,CAAC,UAAW,UAAW,YAD3C,mBACRH,EADQ,KACDI,EADC,OAEuBD,mBAAS,GAFhC,mBAERF,EAFQ,KAEKI,EAFL,OAGSF,mBAAS,CAAC,EAAE,EAAE,IAHvB,mBAGRG,EAHQ,KAGFC,EAHE,OAIWJ,oBAAS,GAJpB,mBAIRK,EAJQ,KAIDC,EAJC,OAKWN,mBAAS,IALpB,mBAKRO,EALQ,KAKDC,EALC,KAOTC,EAAS,CAAC,OAAS,WAEvB,OACE,sBAAKb,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,4CAEDC,EAAMa,KAAI,SAAUC,EAAMC,GACzB,OACE,sBACEhB,UAAU,OAEViB,QAAS,WACPX,EAAeU,GAAQN,GAAS,IAJpC,UAOE,qBAAIV,UAAU,YAAd,UACGe,EAAM,IACP,uBAAMF,MAAOA,EAAOK,YAAWF,EAC7BC,QAAS,SAACE,GACR,IAAIC,EAAOD,EAAEE,OAAOC,QAAT,KACPC,EAAQ,YAAOhB,GAEnBa,GAAQJ,IACNO,EAASP,GAASO,EAASP,GAAS,GAWtCR,EAAQe,IAjBZ,yBAoBK,OAEJhB,EAAKS,MAER,sDAAeA,EAAQ,EAAvB,YACA,yBAhCKA,MAqCX,sBAAKhB,UAAU,UAAf,UACE,uBACEwB,KAAK,OACLC,SAAU,SAACN,GACTP,EAASO,EAAEE,OAAOK,UAGtB,wBACET,QAAS,WACP,IAAIU,EAAS,YAAO1B,GACpB0B,EAAUC,QAAQjB,GAClBN,EAASsB,IAJb,6BAYF,wBACEV,QAAS,WACPP,GAAUD,IAFd,uCAQW,IAAVA,EACC,cAACX,EAAD,CAAOG,MAAOA,EAAOC,YAAaA,IAChC,SC7EK2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a577077.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","/* eslint-disable */\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [title, setTitle] = useState(['title01', 'title02', 'title03']);\n  let [titleNumber, setTitleNumber] = useState(0);\n  let [like, setLike] = useState([0,1,2]);\n  let [modal, setModal] = useState(false);\n  let [input, setInput] = useState('');\n\n  let style = ({'cursor':'pointer'});\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <h1>blogTest</h1>\n      </div>\n      {title.map(function (name, index) {\n        return (\n          <div\n            className=\"list\"\n            key={index}\n            onClick={() => {\n              setTitleNumber(index), setModal(true);\n            }}\n          >\n            <h3 className=\"titleName\">\n              {name}{' '}\n              <span style={style} data-item={index}\n                onClick={(e) => {\n                  let data = e.target.dataset['item'];\n                  let likeCopy = [...like];\n                  \n                  data == index\n                  ? likeCopy[index] = likeCopy[index] + 1\n                  : null\n\n                  // data == 1\n                  // ? likeCopy[1] = likeCopy[1] + 1\n                  // : null\n\n                  // data == 2\n                  // ? likeCopy[2] = likeCopy[2] + 1\n                  // : null\n\n                  setLike(likeCopy);\n                }}\n              >\n                üëç{' '}\n              </span>\n              {like[index]}\n            </h3>\n            <p>2020ÎÖÑ 11Ïõî 0{index + 1}Ïùº</p>\n            <hr />\n          </div>\n        );\n      })}\n\n      <div className=\"publish\">\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            let titleCopy = [...title];\n            titleCopy.unshift(input);\n            setTitle(titleCopy);\n          }}\n        >\n          Ï†ÄÏû•\n        </button>\n      </div>\n\n      {/* <input type=\"text\" onChange={(e)=>{ setInput(e.target.value) }} /> */}\n      <button\n        onClick={() => {\n          setModal(!modal);\n        }}\n      >\n        Ïó¥Í≥†Îã´Í∏∞\n      </button>\n\n      {modal === true ? (\n        <Modal title={title} titleNumber={titleNumber}></Modal>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <div className=\"modal\">\n      <h3>{props.title[props.titleNumber]}</h3>\n      <p>ÎÇ¥Ïö©</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}